{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "58ac7b67",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "d534340d",
   "metadata": {},
   "outputs": [],
   "source": [
    "csvpath = (\"Resources/Movie-Data/Attributes_DataFrame.csv\") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "57d4e4a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Title</th>\n",
       "      <th>Domestic</th>\n",
       "      <th>International</th>\n",
       "      <th>Budget</th>\n",
       "      <th>Distributor</th>\n",
       "      <th>MPAA-Rating</th>\n",
       "      <th>Runtime</th>\n",
       "      <th>Genres</th>\n",
       "      <th>(International+Domestic)</th>\n",
       "      <th>Revenue Result?</th>\n",
       "      <th>Base Genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jurassic World (2015)</td>\n",
       "      <td>652270625</td>\n",
       "      <td>1018130012</td>\n",
       "      <td>150000000.0</td>\n",
       "      <td>Universal Pictures</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>124</td>\n",
       "      <td>Action;Adventure;Sci-Fi</td>\n",
       "      <td>1670400637</td>\n",
       "      <td>Success</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Star Wars: Episode VII - The Force Awakens (2015)</td>\n",
       "      <td>936662225</td>\n",
       "      <td>1131561399</td>\n",
       "      <td>245000000.0</td>\n",
       "      <td>Walt Disney Studios Motion Pictures</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>138</td>\n",
       "      <td>Action;Adventure;Sci-Fi</td>\n",
       "      <td>2068223624</td>\n",
       "      <td>Success</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Avengers: Age of Ultron (2015)</td>\n",
       "      <td>459005868</td>\n",
       "      <td>943800000</td>\n",
       "      <td>250000000.0</td>\n",
       "      <td>Walt Disney Studios Motion Pictures</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>141</td>\n",
       "      <td>Action;Adventure;Sci-Fi</td>\n",
       "      <td>1402805868</td>\n",
       "      <td>Success</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Inside Out (2015)</td>\n",
       "      <td>356461711</td>\n",
       "      <td>501149463</td>\n",
       "      <td>175000000.0</td>\n",
       "      <td>Walt Disney Studios Motion Pictures</td>\n",
       "      <td>PG</td>\n",
       "      <td>95</td>\n",
       "      <td>Adventure;Animation;Comedy;Drama;Family;Fantasy</td>\n",
       "      <td>857611174</td>\n",
       "      <td>Success</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Furious 7 (2015)</td>\n",
       "      <td>353007020</td>\n",
       "      <td>1162040651</td>\n",
       "      <td>190000000.0</td>\n",
       "      <td>Universal Pictures</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>137</td>\n",
       "      <td>Action;Adventure;Thriller</td>\n",
       "      <td>1515047671</td>\n",
       "      <td>Success</td>\n",
       "      <td>Action</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3394</th>\n",
       "      <td>National Theater Live: Cyrano de Bergerac (2020)</td>\n",
       "      <td>198352</td>\n",
       "      <td>1164860</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Fathom Events</td>\n",
       "      <td>NaN</td>\n",
       "      <td>160</td>\n",
       "      <td>Drama;Romance</td>\n",
       "      <td>1363212</td>\n",
       "      <td>0</td>\n",
       "      <td>Drama</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3395</th>\n",
       "      <td>The Wolf of Snow Hollow (2020)</td>\n",
       "      <td>185026</td>\n",
       "      <td>81937</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United Artists Releasing</td>\n",
       "      <td>R</td>\n",
       "      <td>83</td>\n",
       "      <td>Comedy;Horror;Thriller</td>\n",
       "      <td>266963</td>\n",
       "      <td>0</td>\n",
       "      <td>Comedy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3396</th>\n",
       "      <td>Come Away (2020)</td>\n",
       "      <td>184477</td>\n",
       "      <td>1480982</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Relativity Media</td>\n",
       "      <td>PG</td>\n",
       "      <td>94</td>\n",
       "      <td>Adventure;Drama;Fantasy</td>\n",
       "      <td>1665459</td>\n",
       "      <td>0</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3397</th>\n",
       "      <td>No Escape (2020)</td>\n",
       "      <td>167962</td>\n",
       "      <td>4135870</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Vertical Entertainment</td>\n",
       "      <td>R</td>\n",
       "      <td>91</td>\n",
       "      <td>Adventure;Horror;Mystery;Thriller</td>\n",
       "      <td>4303832</td>\n",
       "      <td>0</td>\n",
       "      <td>Adventure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3398</th>\n",
       "      <td>A Call to Spy (2020)</td>\n",
       "      <td>159014</td>\n",
       "      <td>681026</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IFC Films</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>123</td>\n",
       "      <td>Biography;Crime;Drama;Thriller;War</td>\n",
       "      <td>840040</td>\n",
       "      <td>0</td>\n",
       "      <td>Biography</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3399 rows Ã— 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  Title   Domestic  \\\n",
       "0                                 Jurassic World (2015)  652270625   \n",
       "1     Star Wars: Episode VII - The Force Awakens (2015)  936662225   \n",
       "2                        Avengers: Age of Ultron (2015)  459005868   \n",
       "3                                     Inside Out (2015)  356461711   \n",
       "4                                      Furious 7 (2015)  353007020   \n",
       "...                                                 ...        ...   \n",
       "3394   National Theater Live: Cyrano de Bergerac (2020)     198352   \n",
       "3395                     The Wolf of Snow Hollow (2020)     185026   \n",
       "3396                                   Come Away (2020)     184477   \n",
       "3397                                   No Escape (2020)     167962   \n",
       "3398                               A Call to Spy (2020)     159014   \n",
       "\n",
       "      International       Budget                          Distributor  \\\n",
       "0        1018130012  150000000.0                   Universal Pictures   \n",
       "1        1131561399  245000000.0  Walt Disney Studios Motion Pictures   \n",
       "2         943800000  250000000.0  Walt Disney Studios Motion Pictures   \n",
       "3         501149463  175000000.0  Walt Disney Studios Motion Pictures   \n",
       "4        1162040651  190000000.0                   Universal Pictures   \n",
       "...             ...          ...                                  ...   \n",
       "3394        1164860          NaN                        Fathom Events   \n",
       "3395          81937          NaN             United Artists Releasing   \n",
       "3396        1480982          NaN                     Relativity Media   \n",
       "3397        4135870          NaN               Vertical Entertainment   \n",
       "3398         681026          NaN                            IFC Films   \n",
       "\n",
       "     MPAA-Rating  Runtime                                           Genres  \\\n",
       "0          PG-13      124                          Action;Adventure;Sci-Fi   \n",
       "1          PG-13      138                          Action;Adventure;Sci-Fi   \n",
       "2          PG-13      141                          Action;Adventure;Sci-Fi   \n",
       "3             PG       95  Adventure;Animation;Comedy;Drama;Family;Fantasy   \n",
       "4          PG-13      137                        Action;Adventure;Thriller   \n",
       "...          ...      ...                                              ...   \n",
       "3394         NaN      160                                    Drama;Romance   \n",
       "3395           R       83                           Comedy;Horror;Thriller   \n",
       "3396          PG       94                          Adventure;Drama;Fantasy   \n",
       "3397           R       91                Adventure;Horror;Mystery;Thriller   \n",
       "3398       PG-13      123               Biography;Crime;Drama;Thriller;War   \n",
       "\n",
       "      (International+Domestic) Revenue Result? Base Genre  \n",
       "0                   1670400637         Success     Action  \n",
       "1                   2068223624         Success     Action  \n",
       "2                   1402805868         Success     Action  \n",
       "3                    857611174         Success  Adventure  \n",
       "4                   1515047671         Success     Action  \n",
       "...                        ...             ...        ...  \n",
       "3394                   1363212               0      Drama  \n",
       "3395                    266963               0     Comedy  \n",
       "3396                   1665459               0  Adventure  \n",
       "3397                   4303832               0  Adventure  \n",
       "3398                    840040               0  Biography  \n",
       "\n",
       "[3399 rows x 11 columns]"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_df = pd.read_csv(csvpath, encoding=\"utf-8\")\n",
    "\n",
    "columns_list = ['International', 'Domestic']\n",
    "\n",
    "#Create Sum of Domestic and International\n",
    "\n",
    "movies_df['(International+Domestic)'] = movies_df[columns_list].sum(axis=1)\n",
    "\n",
    "\n",
    "#Create Base Genre Column\n",
    "\n",
    "Base_Genre = movies_df['Genres'].str.split(\";\", n = 1, expand=True)\n",
    "\n",
    "#Drop Null Values\n",
    "#movies_df = movies_df.dropna()\n",
    "\n",
    "#Create New Smash or Bomb Column using if statement\n",
    "\n",
    "conditions = [movies_df['Budget'] > movies_df['(International+Domestic)'],\n",
    "             movies_df['Budget'] < movies_df['(International+Domestic)']]\n",
    "\n",
    "#Define Choices\n",
    "              \n",
    "choices = ['Bomb','Success']\n",
    "\n",
    "#Create New Column in dataframe\n",
    "\n",
    "movies_df['Revenue Result?'] = np.select(conditions, choices)\n",
    "\n",
    "movies_df['Base Genre']=Base_Genre[0]\n",
    "                            \n",
    "movies_df.head(-1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "0a236398",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Genres</th>\n",
       "      <th>(International+Domestic)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>Action;Adventure;Sci-Fi</td>\n",
       "      <td>38632034212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>275</th>\n",
       "      <td>Adventure;Animation;Comedy;Family;Fantasy</td>\n",
       "      <td>18304028617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>Action;Adventure;Fantasy;Sci-Fi</td>\n",
       "      <td>13653950856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>Action;Adventure;Thriller</td>\n",
       "      <td>13062897651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>Action;Adventure;Sci-Fi;Thriller</td>\n",
       "      <td>11793166240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>Comedy;Romance</td>\n",
       "      <td>11060046036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>505</th>\n",
       "      <td>Comedy</td>\n",
       "      <td>10934556798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>561</th>\n",
       "      <td>Comedy;Drama;Romance</td>\n",
       "      <td>10204139722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>Action;Adventure;Fantasy</td>\n",
       "      <td>9125890044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>Adventure;Family;Fantasy</td>\n",
       "      <td>7402305965</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        Genres  (International+Domestic)\n",
       "131                    Action;Adventure;Sci-Fi               38632034212\n",
       "275  Adventure;Animation;Comedy;Family;Fantasy               18304028617\n",
       "112            Action;Adventure;Fantasy;Sci-Fi               13653950856\n",
       "134                  Action;Adventure;Thriller               13062897651\n",
       "132           Action;Adventure;Sci-Fi;Thriller               11793166240\n",
       "611                             Comedy;Romance               11060046036\n",
       "505                                     Comedy               10934556798\n",
       "561                       Comedy;Drama;Romance               10204139722\n",
       "102                   Action;Adventure;Fantasy                9125890044\n",
       "396                   Adventure;Family;Fantasy                7402305965"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Gather top 10 Genre Clusters and sort revenues ascending\n",
    "movies_df.groupby(['Genres'], as_index=False).agg({'(International+Domestic)':sum}).sort_values('(International+Domestic)', ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "1d422b06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Genre Cluster vs. Total Revenue (1999-2020)'}, xlabel='Genre Cluster', ylabel='Revenue In Billions'>"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Rename Dataframes (groupby_genres from movies_df) and Sort\n",
    "groupby_genres = movies_df.groupby(['Genres'], as_index=False).agg({'(International+Domestic)':sum}).sort_values('(International+Domestic)', ascending=False).head(10)\n",
    "groupby_genres.set_index('Genres', inplace = True)\n",
    "groupby_genres.plot(kind='bar', title='Genre Cluster vs. Total Revenue (1999-2020)', ylabel='Revenue In Billions', xlabel='Genre Cluster', figsize=(6,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "84849371",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
